## 1주차 
성능,신뢰성,보안 , 변경요이성, 과같은 품질 속성은 모두 소프트웨어가 정확한 해결책을 만드는 것을 확인하는 것만큼 중요하다

해결 방안들을 찾아내고 그것을 수행할 사람들에게 효과적으로 전달하는 것은 아키텍트에게 달려 있다.

아키텍처 문서는 품질 속성에 관한 세가지 책무가 있다.

- 어떤 품질 속성이 설계를 주도하는지 나타내야 한다.
- 품질 속성 요구를 충족하기 위해 선택된 해결 방안을 담아내야 한다,.
- 해결 방안이 필수적인 품질 속성을 어떻게 제공하는지 그 근거를 담아내야 한다.

아키텍처를 정의하는 내용은 많지만 이책에서 생각하는 아키텍처란?

- 프로그램 또는 컴퓨팅 시스템의 소프트웨어 아키텍처는 소프트웨어 요소와 이들 요소의 외부러 드러나는 속성 그리고 이들 사이의 관계를 구성하는 시스템의 구조다
- 외부로 드러나는 속성이란 다른 컴포넌트들이 컴포넌트에 관한 제공된 인터페이스, 성능, 특징, 결함 처리, 공유 리소스 사용등과 같은 가정을 한다는 것을 의미한다.

아키텍처 목적 : 아시스템의 품지로가 행위 요구 그리고 비즈니스 목표를 만족시키는 것이다. 

- 아키텍처를 잘 설계해 필요한 정보를 최대한 빨게 찾을 수 잇도록 해야한다

## 아키텍처 문서화의 사용과독자

- 아키텍트 문서의 세 가지 활용성
    - 아키텍처 문서는 교육 수단으로 사용된다.
    - 아키텍처 문서는 이해 당사자 사이의 최우선 의사소통 수단으로서 사용된다.
    - 설계 결정의 저장소로서 사용할 것이다.
    

아키텍처는 변하지 않는 것만 기록한다.

문서화해야 하는 뷰를 결정하는 것ㅇㄴ 문서를 만드는 사람이 기대하는 용도에 따라 달려 ㅣㅇㅆ다. 

뷰마다 강조하고자 하는 시스템 요소나 관계가 다를 것이다.

아키텍처 문서화는 적절한 뷰를 문서화 한다음에 하나 이상의 뷰에 적용되는 정보를 문서화에 추가하는 것이다. 

- 스타일 지침이란?
    - 아키텍처 스타일을 서술한 것으로 설계와 용어와 규칙을 명세한다.

- 아키텍처 스타일과 아키텍처 패턴
    - 아키텍처 스타일은 요소와 관계 타입의 특수화 그리고 이들이 사용되는 방법에 대한 제약사항 대한 집합
    - 아키텍처 패턴은 소프트웨어 시스템의 기본적인 구조적 구성 스키마를 표현한다.
    
- 아키텍처 스타일은 주목받고 있는 아키텍처 접근 방법을 표현핟나.

## 좋은 문서화를 위한 7가지 규칙

- 읽는 사람의 관점에서 문서를 작성한다.
- 불필요한 반복을 피한다.
- 모호성을 피한다,.
- 표준 구성을 사용한다.
- 근거를 기록한다.
- 문서를 최신 버전으로 유지한다.
- 목적에 적합한지 문서를 검토한다.